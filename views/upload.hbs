<header class="header-section">
    <h1 class="header-title">MOV to MP4 Converter</h1>
  </header>
  <section class="converter-section">
    <form class="converter-form" action="/convert" method="post" enctype="multipart/form-data">
    <div class="form-group">
      <label for="movFile" class="file-label">Choose a MOV file to convert:</label>
      <input type="file" class="form-control-file" name="movFile" id="movFile" accept="video/quicktime">
      <div class="drag-drop-area" onclick="document.getElementById('movFile').click();">
        <p>Drag & Drop your MOV file here</p>
        <p>or click to choose a file</p>
      </div>
    </div>
    <button type="submit" class="btn btn-primary">Convert</button>
  </form>
    <div class="progress-container">
      <p>Conversion progress:</p>
      <div class="progress">
        <div id="progress" class="progress-bar" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
      </div>
    </div>
  </section>

<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.4.0/socket.io.min.js"></script>
<script>
    const socket = io();

    const progressElement = document.getElementById('progress');
    const uploadForm = document.querySelector('.converter-form');
    const movFileInput = document.querySelector('.form-control-file');

    socket.on('connect', () => {
      fetch('/session')
        .then((response) => response.text())
        .then((sessionId) => {
          socket.emit('joinRoom', sessionId);
        });
    });

    socket.on('connect', () => {
      console.log('Connected to server');
    });

    socket.on('disconnect', () => {
      console.log('Disconnected from server');
    });

    socket.on('conversionProgress', (percent) => {
        console.log(percent);
        progressElement.style.width = percent + '%';
    });

    uploadForm.addEventListener('submit', (e) => {
        e.preventDefault();

        const formData = new FormData();
        formData.append('movFile', movFileInput.files[0]);

        fetch('/convert', {
            method: 'POST',
            body: formData,
        })
        .then((response) => response.blob())
        .then((blob) => {
            const url = window.URL.createObjectURL(blob);
            const link = document.createElement('a');
            link.href = url;
            link.setAttribute('download', 'converted.mp4');
            document.body.appendChild(link);
            link.click();
            link.remove();
        })
        .catch((error) => {
            console.error('Error uploading the file:', error);
        });
    });

    // Disable the convert button initially
    const convertButton = document.querySelector('.btn');
    convertButton.disabled = true;

    // Listen for changes on the file input
    const fileInput = document.getElementById('movFile');
    fileInput.addEventListener('change', (event) => {
      const file = event.target.files[0];

      if (file) {
        // Enable the convert button if a file is selected
        convertButton.disabled = false;

        // Update the drag-drop area text with the file name
        const dragDropArea = document.querySelector('.drag-drop-area');
        dragDropArea.innerHTML = `<p>${file.name}</p>`;
      } else {
        // Disable the convert button if no file is selected
        convertButton.disabled = true;

        // Reset the drag-drop area text
        const dragDropArea = document.querySelector('.drag-drop-area');
        dragDropArea.innerHTML = `
          <p>Drag & Drop your MOV file here</p>
          <p>or click to choose a file</p>
        `;
      }
    });

    // Trigger the file input when the drag-drop area is clicked
    const dragDropArea = document.querySelector('.drag-drop-area');
    dragDropArea.addEventListener('click', () => {
      // Check if the event target is the file input itself
        if (event.target !== fileInput) {
          fileInput.click();
        }
    });

</script>
